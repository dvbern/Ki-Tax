stages: [ build, analyze, prepare-package, package, release, deploy, testing, mirror ]

variables:
    VERSION: $CI_COMMIT_SHA
    DEV_HOST: sdvbvmkiba31.dvbern.ch
    npm_config_cache: "$CI_PROJECT_DIR/.npm"
    CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/Cypress"

workflow:
    rules:
        # Commit on dev branch
        -   if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
            variables:
                VERSION: $CI_COMMIT_SHA
                SERVICE_NAME: kibon-dev
                SSH_HOST: $DEV_HOST
                DEPLOY_ENV: dev
                DEPLOY_URL: https://dev.kibon.ch
                SONAR_CONFIG: -Dsonar.host.url=$DVB_SONARQUBE_HOST_URL -Dsonar.projectKey=$SONAR_PROJECT_KEY
                SONAR_GOAL: sonar:sonar
        # merge request
        -   if: $CI_MERGE_REQUEST_ID
            variables:
                VERSION: $CI_COMMIT_REF_SLUG
                SERVICE_NAME: kibon-dev-preview
                SSH_HOST: $DEV_HOST
                DEPLOY_ENV: preview
                DEPLOY_URL: https://preview.kibon.ch
                SONAR_CONFIG: -Dsonar.host.url=$DVB_SONARQUBE_HOST_URL -Dsonar.projectKey=$SONAR_PROJECT_KEY
                SONAR_GOAL: sonar:sonar
        # Release
        -   if: $CI_COMMIT_TAG
            variables:
                VERSION: $CI_COMMIT_TAG
        # Scheduled Pipelines
        -   if: $CI_PIPELINE_SOURCE == "schedule"

include:
    -   component: gitlab.dvbern.ch/devops/gitlab/components/maven@v0.1.7
        inputs:
            name: .build-backend
            java-image-version: 11-jdk-alpine
            maven-goal: -Drevision=$VERSION -Pcoverage -Pcopy-wildfly-dependencies -P!frontend clean install

    -   component: gitlab.dvbern.ch/devops/gitlab/components/maven@v0.1.7
        inputs:
            name: .build-frontend
            java-image: docker-registry.dvbern.ch/kibon/build-environment/mvn-npm-gitflow-chromium
            java-image-version: jdk11-old
            maven-goal: -Drevision=$VERSION --projects .,ebegu-web -Pci -Pfrontend clean install

    -   component: gitlab.dvbern.ch/devops/gitlab/components/sonarqube@v0.1.7
        inputs:
            name: .analyze-backend
            sonar-scanner: maven
            java-version: eclipse-temurin-11
            sonar-project-key: $SONAR_PROJECT_KEY_BACKEND
            sonar-token: $SONAR_TOKEN_BACKEND
            enforce-quality-gate: 'false'
            maven-args: --projects '!ebegu-web' # exclude frontend from analysis

    -   component: gitlab.dvbern.ch/devops/gitlab/components/sonarqube@v0.1.7
        inputs:
            name: .analyze-frontend
            sonar-scanner: cli
            sonar-project-key: $SONAR_PROJECT_KEY_FRONTEND
            sonar-token: $SONAR_TOKEN_FRONTEND
            context-dir: ebegu-web
            enforce-quality-gate: 'false'

    -   component: 'gitlab.dvbern.ch/mobj/buildah@1535f41c035b3fd5bef23bae7abe968ebc00084f'
        inputs:
            registry: $DVB_DOCKER_REGISTRY
            registry-user: $DVB_DOCKER_REGISTRY_USER
            registry-token: $DVB_DOCKER_REGISTRY_TOKEN
            name: .build-backend-image
            stage: package
            image-name: kibon-wildfly
            context-dir: ebegu-rest
            version: $VERSION
            push-enabled: "true"

    -   component: 'gitlab.dvbern.ch/mobj/buildah@1535f41c035b3fd5bef23bae7abe968ebc00084f'
        inputs:
            registry: $DVB_DOCKER_REGISTRY
            registry-user: $DVB_DOCKER_REGISTRY_USER
            registry-token: $DVB_DOCKER_REGISTRY_TOKEN
            name: .build-e2e-test-db-setup-image
            stage: package
            image-name: kibon-e2e-test-db-setup
            context-dir: ebegu-dbschema/src/main/resources
            version: $VERSION
            dockerfile-path: e2e-test-db-setup/Dockerfile
            push-enabled: "true"

    -   component: 'gitlab.dvbern.ch/mobj/buildah@1535f41c035b3fd5bef23bae7abe968ebc00084f'
        inputs:
            registry: $DVB_DOCKER_REGISTRY
            registry-user: $DVB_DOCKER_REGISTRY_USER
            registry-token: $DVB_DOCKER_REGISTRY_TOKEN
            name: .build-frontend-image
            stage: package
            # nginx is spelled wrong here, but that's correct
            image-name: kibon-ngnix
            context-dir: ebegu-web
            version: $VERSION
            push-enabled: "true"

    -   component: 'gitlab.dvbern.ch/mobj/docker-compose-deploy@32ef66630d4b27db1893e960017a82809f68ec37'
        inputs:
            name: .docker-compose-deploy
            service-name: $SERVICE_NAME
            version: $VERSION
            version-env-var: 'TAGTOUSE'
            ssh-user: $KIBON_DEPLOY_SSH_USER
            ssh-private-key: $KIBON_SSH_PRIVATE_KEY
            ssh-target: '$SSH_HOST'

    -   component: 'gitlab.dvbern.ch/mobj/docker-compose-deploy@32ef66630d4b27db1893e960017a82809f68ec37'
        inputs:
            name: .docker-compose-deploy:e2e
            service-name: kibon-dev-e2e
            version: $VERSION
            version-env-var: 'TAGTOUSE'
            ssh-user: $KIBON_DEPLOY_SSH_USER
            ssh-private-key: $KIBON_SSH_PRIVATE_KEY
            ssh-target: $DEV_HOST

    -   component: 'gitlab.dvbern.ch/mobj/docker-compose-deploy@32ef66630d4b27db1893e960017a82809f68ec37'
        inputs:
            name: .docker-compose-deploy:prod
            service-name: kibon
            version: $VERSION
            version-env-var: 'TAGTOUSE'
            ssh-user: $KIBON_DEPLOY_SSH_USER
            ssh-private-key: $KIBON_SSH_PRIVATE_KEY
            ssh-target: 'sdvbvmkiba01.dvbern.ch sdvbvmkiba02.dvbern.ch'

    -   component: 'gitlab.dvbern.ch/mobj/docker-compose-deploy@32ef66630d4b27db1893e960017a82809f68ec37'
        inputs:
            name: .docker-compose-deploy:uat
            service-name: kibon-uat
            version: $VERSION
            version-env-var: 'TAGTOUSE'
            ssh-user: $KIBON_DEPLOY_SSH_USER
            ssh-private-key: $KIBON_SSH_PRIVATE_KEY
            ssh-target: 'sdvbvmkiba21.dvbern.ch sdvbvmkiba22.dvbern.ch'

    -   component: 'gitlab.dvbern.ch/mobj/docker-compose-deploy@32ef66630d4b27db1893e960017a82809f68ec37'
        inputs:
            name: .docker-compose-deploy:iat
            service-name: kibon-iat
            version: $VERSION
            version-env-var: 'TAGTOUSE'
            ssh-user: $KIBON_DEPLOY_SSH_USER
            ssh-private-key: $KIBON_SSH_PRIVATE_KEY
            ssh-target: 'sdvbvmkiba41.dvbern.ch'

    -   component: 'gitlab.dvbern.ch/mobj/docker-compose-deploy@32ef66630d4b27db1893e960017a82809f68ec37'
        inputs:
            name: .docker-compose-deploy:schulung
            service-name: kibon-schulung
            version: $VERSION
            version-env-var: 'TAGTOUSE'
            ssh-user: $KIBON_DEPLOY_SSH_USER
            ssh-private-key: $KIBON_SSH_PRIVATE_KEY
            ssh-target: 'sdvbvmkiba11.dvbern.ch'

    -   component: 'gitlab.dvbern.ch/mobj/docker-compose-deploy@32ef66630d4b27db1893e960017a82809f68ec37'
        inputs:
            name: .docker-compose-deploy:demo
            service-name: kibon-demo
            version: $VERSION
            version-env-var: 'TAGTOUSE'
            ssh-user: $KIBON_DEPLOY_SSH_USER
            ssh-private-key: $KIBON_SSH_PRIVATE_KEY
            ssh-target: 'sdvbvmkiba11.dvbern.ch'

deploy:prod:
    dependencies: [ ]
    rules:
        -   if: $CI_COMMIT_TAG
            when: manual
            allow_failure: true
    environment:
        name: prod
        url: https://kibon.ch
    extends: .docker-compose-deploy:prod

deploy:uat:
    dependencies: [ ]
    rules:
        -   if: $CI_COMMIT_TAG
            when: manual
            allow_failure: true
    environment:
        name: uat
        url: https://uat.kibon.ch
    extends: .docker-compose-deploy:uat

deploy:iat:
    dependencies: [ ]
    rules:
        -   if: $CI_COMMIT_TAG
            when: manual
            allow_failure: true
    environment:
        name: iat
        url: https://iat.kibon.ch
    extends: .docker-compose-deploy:iat

deploy:schulung:
    dependencies: [ ]
    rules:
        -   if: $CI_COMMIT_TAG
            when: manual
            allow_failure: true
    environment:
        name: schulung
        url: https://schulung.kibon.ch
    extends: .docker-compose-deploy:schulung

deploy:demo:
    dependencies: [ ]
    needs:
        - deploy:prod
    rules:
        -   if: $CI_COMMIT_TAG
            allow_failure: true
    environment:
        name: demo
        url: https://demo.kibon.ch
    extends: .docker-compose-deploy:demo

# for dev and preview
deploy:
    extends: .docker-compose-deploy
    dependencies: [ ]
    environment:
        name: $DEPLOY_ENV
        url: $DEPLOY_URL
    rules:
        -   if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
        -   if: $CI_MERGE_REQUEST_ID
            when: manual
            allow_failure: true
        -   if: $CI_COMMIT_TAG
            when: never

deploy:e2e:
    extends: .docker-compose-deploy:e2e
    dependencies: [ ]
    environment:
        name: e2e
        url: https://e2e.kibon.ch
    rules:
        -   if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

create-build-args:
    image: '$DVB_DOCKER_REGISTRY/dockerhub/library/eclipse-temurin:11-jdk-alpine'
    tags: [ "os:linux", "type:docker", "zone:tz" ]
    stage: prepare-package
    variables:
        DVB_MAVEN_CLI_OPTS: >-
            --settings .m2/settings.xml
    script:
        - echo "KIBON_POM_VERSION=$VERSION" > build-args.env
        - cat build-args.env
    artifacts:
        paths:
            - build-args.env
    needs: [ ]

build-backend:
    extends: .build-backend
    needs: [ ]
    artifacts:
        paths:
            - 'ebegu-rest/target/for-docker-build/*'
            - 'ebegu-rest/target/ebegu-rest-*.war'
            - 'ebegu-*/target/pmd.xml'
            - 'ebegu-*/target/spotbugs/'
            - 'ebegu-*/target/jacoco.exec'
            - 'ebegu-*/target/site'
            - 'ebegu-*/target/surefire-reports/'
            - 'ebegu-*/target/classes'
        expire_in: 7 days

build-frontend:
    extends: .build-frontend
    needs: [ ]
    cache:
        key:
            files:
                - ebegu-web/package-lock.json
        paths:
            - .npm
            - ebegu-web/node_modules/
            - Cypress/
        policy: pull-push
    artifacts:
        paths:
            - 'ebegu-web/target/*'
            - 'ebegu-web/build/*'
        expire_in: 7 days

analyze-backend:
    variables:
        GIT_DEPTH: 0
    extends: .analyze-backend-maven
    needs:
        - build-backend

build-backend-image:
    extends: .build-backend-image
    needs:
        - build-backend
        - create-build-args

build-frontend-image:
    extends: .build-frontend-image
    needs:
        - build-frontend
        - create-build-args

analyze-frontend:
    variables:
        GIT_DEPTH: 0
    extends: .analyze-frontend-cli
    allow_failure: true # TODO remove after SONAR_TOKEN clash is resolved
    needs:
        - build-frontend

build-e2e-test-db-setup-image:
    extends: .build-e2e-test-db-setup-image
    needs: [ ]

run-e2e-tests:
    stage: testing
    variables:
        environment: e2e
        baseURL: "https://${environment}-be.kibon.ch/web/"
    tags: [ 'os:linux', 'type:docker', 'zone:tz' ]
    dependencies:
        - build-frontend
    image: '${DVB_DOCKER_REGISTRY}/dockerhub/cypress/browsers:node-18.14.1-chrome-110.0.5481.96-1-ff-109.0-edge-110.0.1587.41-1'
    rules:
        -   if: $CI_PIPELINE_SOURCE == "merge_request_event"
            when: manual
            needs:
                - deploy
                - build-frontend
            variables:
                environment: preview
        -   if: $CI_PIPELINE_SOURCE == "schedule"
    cache:
        key:
            files:
                - ebegu-web/package-lock.json
        paths:
            - .npm
            - ebegu-web/node_modules
            - Cypress
        policy: pull
    script:
        - cd ebegu-web
        - npx cypress run --e2e --headless --browser chrome
    artifacts:
        when: always
        paths:
            - ebegu-web/cypress/videos/**/*.mp4
            - ebegu-web/cypress/screenshots/**/*.png
            - ebegu-web/cypress/results/*.xml
        expire_in: 14 days
        reports:
            junit: ebegu-web/cypress/results/*.xml

# based on stip-api's mirror job
github-mirror:
    stage: mirror
    needs: [ ]
    image:
        name: '${DVB_DOCKER_REGISTRY}/dockerhub/alpine/git:2.40.1'
        entrypoint: [ '' ]
    tags: [ 'os:linux', 'type:docker', 'zone:tz' ]
    variables:
        GIT_STRATEGY: none
    before_script:
        - rm -rf ./*
        - git clone --branch $CI_COMMIT_TAG --single-branch https://mirror:$GITHUB_MIRROR_CLONE_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git .
        - git checkout $CI_COMMIT_TAG
    script:
        - git push -u https://token:${GITHUB_MIRROR_TOKEN}@github.com/dvbern/kiBon.git HEAD:dev
    rules:
        -   if: $CI_COMMIT_TAG
            when: manual
            allow_failure: true
