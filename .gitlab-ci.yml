# stages: [build, validate, test, analyze, package, deploy, mirror]
stages: [ build, prepare-package, package, deploy, mirror ]

variables:
    RELEASE_VERSION:
        description: "The version of the release to build and push"

workflow:
    rules:
        -   if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
            variables:
                VERSION: $CI_COMMIT_SHA
                MAVEN_GOAL: deploy
        -   if: $CI_MERGE_REQUEST_ID || '$CI_PIPELINE_SOURCE == "merge_request_event"'
            variables:
                VERSION: $CI_COMMIT_REF_SLUG
                MAVEN_GOAL: install
        -   if: $RELEASE_VERSION != ""
            variables:
                VERSION: $RELEASE_VERSION
                MAVEN_GOAL: install

include:
    -   component: gitlab.dvbern.ch/mobj/maven@89ec140318641f5a453983b8c04454bd6b1932b8
        #rules:
        #  - if: $CI_COMMIT_BRANCH == "feature/gitlab-pipeline-migration" && $CI_PIPELINE_SOURCE != "schedule"
        inputs:
            name: build-without-arquillian
            java-image: docker-registry.dvbern.ch/kibon/build-environment/mvn-npm-gitflow-chromium
            java-image-version: jdk11-old
            maven-goal: -Pdvbern.oss -Pcopy-wildfly-dependencies -P\!frontend clean install
            archive-path: ebegu-rest/target # we need ebegu-rest WAR, sentry JAR and belogin-connector WAR

    -   component: gitlab.dvbern.ch/mobj/maven@89ec140318641f5a453983b8c04454bd6b1932b8
        #rules:
        #  - if: $CI_COMMIT_BRANCH == "feature/gitlab-pipeline-migration" && $CI_PIPELINE_SOURCE != "schedule"
        inputs:
            name: build-ebegu-web
            java-image: docker-registry.dvbern.ch/kibon/build-environment/mvn-npm-gitflow-chromium
            java-image-version: jdk11-old
            maven-goal: --projects .,ebegu-web -Pdvbern.oss -Pci -Pfrontend clean install
            archive-path: ebegu-web/target/*.tar.gz

    # - component: gitlab.dvbern.ch/components/maven@v2.0.1
    #   rules:
    #     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "schedule"
    #   inputs:
    #     java-image: docker-registry.dvbern.ch/kibon/build-environment/mvn-npm-gitflow-chromium
    #     java-image-version: jdk11-old
    #     maven-goal: -Pdvbern.oss -Pfrontend -Pci -Ptest-wildfly-managed clean install

    # TODO public or private registry? using a private base image and pushing the resulting image to public registry is not supported at the moment
    -   component: 'gitlab.dvbern.ch/mobj/buildah@a7143bb366f9ee8e1ddfd1813acb1649a104cb36'
        inputs:
            registry: $DVB_DOCKER_REGISTRY
            registry-user: $DVB_DOCKER_REGISTRY_USER
            registry-token: $DVB_DOCKER_REGISTRY_TOKEN
            name: build-kibon-app-image
            stage: package
            image-name: kibon-wildfly
            context-dir: ebegu-rest
            version: $VERSION
            push-enabled: "false"

    -   component: 'gitlab.dvbern.ch/mobj/buildah@a7143bb366f9ee8e1ddfd1813acb1649a104cb36'
        inputs:
            registry: $DVB_DOCKER_REGISTRY
            registry-user: $DVB_DOCKER_REGISTRY_USER
            registry-token: $DVB_DOCKER_REGISTRY_TOKEN
            name: build-kibon-web-image
            stage: package
            image-name: kibon-nginx
            context-dir: ebegu-web
            version: $VERSION
            push-enabled: "false"

create-build-args:
    tags: [ "os:linux", "type:docker", "zone:tz" ]
    stage: prepare-package
    script:
        - echo "KIBON_POM_VERSION=$(./mvnw org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -DforceStdout -q -o)" > build-args.env
    artifacts:
        paths:
            - build-args.env
