# stages: [build, validate, test, analyze, package, deploy, mirror]
stages: [build, prepare-package, package, deploy, mirror]

variables:
  RELEASE_VERSION:
    description: "The version of the release to build and push"

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      variables:
        VERSION: $CI_COMMIT_SHA
        MAVEN_GOAL: deploy
    - if: $CI_MERGE_REQUEST_ID || '$CI_PIPELINE_SOURCE == "merge_request_event"'
      variables:
        VERSION: $CI_COMMIT_REF_SLUG
        MAVEN_GOAL: install
    - if: $RELEASE_VERSION != ""
      variables:
        VERSION: $RELEASE_VERSION
        MAVEN_GOAL: install

include:
  - component: gitlab.dvbern.ch/mobj/maven@89ec140318641f5a453983b8c04454bd6b1932b8
    #rules:
    #  - if: $CI_COMMIT_BRANCH == "feature/gitlab-pipeline-migration" && $CI_PIPELINE_SOURCE != "schedule"
    inputs:
      name: build-without-arquillian
      java-image: docker-registry.dvbern.ch/kibon/build-environment/mvn-npm-gitflow-chromium
      java-image-version: jdk11-old
      maven-goal: -Pdvbern.oss -Pfrontend -Pci clean install
      archive-path: ./**/target


  # - component: gitlab.dvbern.ch/components/maven@v2.0.1
  #   rules:
  #     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "schedule"
  #   inputs:
  #     java-image: docker-registry.dvbern.ch/kibon/build-environment/mvn-npm-gitflow-chromium
  #     java-image-version: jdk11-old
  #     maven-goal: -Pdvbern.oss -Pfrontend -Pci -Ptest-wildfly-managed clean install

  # - component: 'gitlab.dvbern.ch/components/buildah@v1.0.1'
  # inputs:
  #   registry: $DVB_PUBLIC_DOCKER_REGISTRY
  #   registry-user: $DVB_PUBLIC_DOCKER_REGISTRY_USER
  #   registry-token: $DVB_PUBLIC_DOCKER_REGISTRY_TOKEN
  #   name: build-dev-docker-image
  #   stage: package
  #   image-name: kibon/kibon-wildfly
  #   dockerfile-path: ./kibon-docker/kibon-docker-config/Dockerfile
  #   version: $VERSION
  #   push-enabled: "false"
